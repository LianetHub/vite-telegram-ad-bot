@use "sass:math";
@use "sass:color";
@use "variables" as *;
@use "mixins" as *;

.calendar {
	// .calendar__days
	&__days {
		display: grid;
		grid-template-columns: repeat(7, 1fr);
		color: rgba(8, 8, 26, 0.6);
		font-size: 0.75rem;
		font-weight: 400;
		line-height: 133.333%;
		text-align: center;
		border-bottom: rem(0.5) solid rgba(8, 8, 26, 0.08);
	}
	// .calendar__day
	&__day {
		padding: 0.75rem 0 0.25rem;
	}
	// .calendar__blocks
	&__blocks {
	}
	// .calendar__block
	&__block {
		padding: 1.5rem 0;
	}
	// .calendar__month
	&__month {
		text-align: center;
		font-size: 1rem;
		font-weight: 500;
		line-height: 131.25%;
		text-transform: capitalize;
	}
	// .calendar__body
	&__body {
		margin-top: 2rem;
		display: grid;
		grid-template-columns: repeat(7, 1fr);
		row-gap: 1.5rem;
	}
	// .calendar__item
	&__item {
		width: 2.75rem;
		height: 2.75rem;
		// overflow: hidden;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		text-align: center;
		font-size: 1rem;
		font-weight: 500;
		line-height: 131.25%;
		cursor: pointer;
		border-radius: 50%;
		transition: background-color 0.3s ease, color 0.3s ease;
		position: relative;

		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%) scale(0);
			opacity: 0;
			background: #e8f1ff;
			border-radius: 50%;
			transition: opacity 0.15s ease, transform 0.3s $gentle-easing;
		}

		// &:hover,
		// &:active {
		// 	color: #0d81ff;
		// 	background: #e8f1ff;
		// }

		&.last {
			color: rgba(8, 8, 26, 0.36);
			pointer-events: none;
		}
		&.today {
			&::before {
				content: "";
				border-radius: 50%;
				background: #0d81ff;
				width: 0.25rem;
				height: 0.25rem;
				order: 1;
				margin-bottom: -0.25rem;
				z-index: 1;
				transition: transform 0.3s ease;
				.selected & {
					transform: translateY(1rem);
				}
			}
		}
		&.selected {
			color: #0d81ff;
			// background: #e8f1ff;
			&::after {
				opacity: 1;
				transform: translate(-50%, -50%) scale(1);
			}

			position: relative;
			& span {
				position: relative;
				z-index: 2;
			}
			& + .selected {
				&:not(:nth-child(7n + 1)) {
					&::after {
						transition: none;
					}
					&::before {
						content: "";
						position: absolute;
						top: 0;
						left: -50%;
						width: 100%;
						height: 100%;
						background: #e8f1ff;
						transform: none;
						transition: none;
						z-index: 1;
					}
				}
			}
		}
	}
}
